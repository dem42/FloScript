/* Name Section */
Arithmetic Template
/* Type Section */
BLOCK_TEMPLATE
/* Var Section */
{'result_var': 'undefined', 'expression':'undefined'}
/* Var Types Section */
{'result_var':'STRING', 'expression':'STRING'}
/* Code Section */
vars.result = floHelper.expandPassedArgumentLabels(JSON.stringify(env.vars), vars.expression);
env.vars[vars.result_var] = new Function("return ".concat(vars.result, ";"))();
floApi.logMessage(env.vars[vars.result_var]);
/* Comment Section */
${result_var} = ${expression}